[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\kamilai\AppData\Local\Temp\idea2253.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\kamilai\AppData\Local\Temp\idea2253.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.4 (Oracle Corporation Java 1.8.0_221)
[debug]       Load.loadUnit: plugins took 125.6325ms
[debug]       Load.loadUnit: defsScala took 0.3604ms
[debug] [Loading] Scanning directory C:\Users\kamilai\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\kamilai\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 21.0993 ms
[debug]           Load.resolveProject(global-plugins) took 48.6213ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\kamilai\.sbt\1.0\plugins, plugins: List(<none>))) took 95.8763ms
[debug] [Loading] Done in C:\Users\kamilai\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 119.324ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2612ms
[debug]     Load.loadUnit(file:/C:/Users/kamilai/.sbt/1.0/plugins/, ...) took 255.3462ms
[debug]   Load.apply: load took 418.2756ms
[debug]   Load.apply: resolveProjects took 6.4861ms
[debug]   Load.apply: finalTransforms took 59.7224ms
[debug]   Load.apply: config.delegates took 9.1519ms
[debug]   Load.apply: Def.make(settings)... took 3486.0255ms
[debug]   Load.apply: structureIndex took 103.9721ms
[debug]   Load.apply: mkStreams took 1.6531ms
[info] loading global plugins from C:\Users\kamilai\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 8687.4258ms
[debug]           Load.loadUnit: plugins took 23.3618ms
[debug]           Load.loadUnit: defsScala took 0.0035ms
[debug] [Loading] Scanning directory C:\ScalaProjects\udemy_remoting_cluster\project
[debug]             Load.loadUnit: mkEval took 0.4187ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\ScalaProjects\udemy_remoting_cluster\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.2157 ms
[info] loading settings for project udemy_remoting_cluster-build from idea2253.sbt ...
[debug]               Load.resolveProject(udemy_remoting_cluster-build) took 109.0177ms
[debug]             Load.loadTransitive: finalizeProject(Project(id udemy_remoting_cluster-build, base: C:\ScalaProjects\udemy_remoting_cluster\project, plugins: List(<none>))) took 111.8997ms
[debug] [Loading] Done in C:\ScalaProjects\udemy_remoting_cluster\project, returning: (udemy_remoting_cluster-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 899.9654ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.3179ms
[debug]         Load.loadUnit(file:/C:/ScalaProjects/udemy_remoting_cluster/project/, ...) took 928.6294ms
[debug]       Load.apply: load took 930.0409ms
[debug]       Load.apply: resolveProjects took 0.1082ms
[debug]       Load.apply: finalTransforms took 7.2138ms
[debug]       Load.apply: config.delegates took 0.378ms
[debug]       Load.apply: Def.make(settings)... took 79.4961ms
[debug]       Load.apply: structureIndex took 28.3921ms
[debug]       Load.apply: mkStreams took 0.0031ms
[info] loading project definition from C:\ScalaProjects\udemy_remoting_cluster\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5077.166ms
[debug]     Load.loadUnit: defsScala took 0.0039ms
[debug] [Loading] Scanning directory C:\ScalaProjects\udemy_remoting_cluster
[debug]       Load.loadUnit: mkEval took 0.3637ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\ScalaProjects\udemy_remoting_cluster, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.0423 ms
[info] loading settings for project udemy_remoting_cluster from build.sbt ...
[debug]         Load.resolveProject(udemy_remoting_cluster) took 156.5047ms
[debug]       Load.loadTransitive: finalizeProject(Project(id udemy_remoting_cluster, base: C:\ScalaProjects\udemy_remoting_cluster, plugins: List(<none>))) took 162.9927ms
[debug] [Loading] Done in C:\ScalaProjects\udemy_remoting_cluster, returning: (udemy_remoting_cluster)
[debug]     Load.loadUnit: loadedProjectsRaw took 5342.8146ms
[debug]     Load.loadUnit: cleanEvalClasses took 28.3188ms
[debug]   Load.loadUnit(file:/C:/ScalaProjects/udemy_remoting_cluster/, ...) took 10449.5087ms
[debug] Load.apply: load took 10452.1819ms
[debug] Load.apply: resolveProjects took 0.1621ms
[debug] Load.apply: finalTransforms took 48.5963ms
[debug] Load.apply: config.delegates took 0.7025ms
[debug] Load.apply: Def.make(settings)... took 166.0206ms
[debug] Load.apply: structureIndex took 53.7162ms
[debug] Load.apply: mkStreams took 0.0046ms
[info] set current project to udemy_remoting_cluster (in build file:/C:/ScalaProjects/udemy_remoting_cluster/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60449 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60449, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to udemy_remoting_cluster (in build file:/C:/ScalaProjects/udemy_remoting_cluster/)
[debug] > Exec(idea-shell, None, None)
